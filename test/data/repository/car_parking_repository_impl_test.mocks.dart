// Mocks generated by Mockito 5.2.0 from annotations
// in demo_app/test/data/repository/car_parking_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:demo_app/data/dataSource/car_parking_apidata_source.dart'
    as _i3;
import 'package:demo_app/domain/entity/parking_domain_entity.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeParkingDomainEntity_0 extends _i1.Fake
    implements _i2.ParkingDomainEntity {}

/// A class which mocks [CarParkingAPIRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarParkingAPIRemoteDataSource extends _i1.Mock
    implements _i3.CarParkingAPIRemoteDataSource {
  MockCarParkingAPIRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ParkingDomainEntity> getSlotForCar(
    String? slotType,
    String? parkingSpace,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSlotForCar,
          [
            slotType,
            parkingSpace,
          ],
        ),
        returnValue:
            Future<_i2.ParkingDomainEntity>.value(_FakeParkingDomainEntity_0()),
      ) as _i4.Future<_i2.ParkingDomainEntity>);
  @override
  _i4.Future<bool> releaseSlotForCar(
    String? slotType,
    String? parkingSpace,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #releaseSlotForCar,
          [
            slotType,
            parkingSpace,
          ],
        ),
        returnValue: Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
