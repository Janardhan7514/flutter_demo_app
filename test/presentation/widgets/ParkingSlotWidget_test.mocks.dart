// Mocks generated by Mockito 5.2.0 from annotations
// in demo_app/test/presentation/widgets/ParkingSlotWidget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:bloc/bloc.dart' as _i10;
import 'package:demo_app/domain/entity/tarrif_domain_entity.dart' as _i6;
import 'package:demo_app/domain/usecase/get_parking_slot.dart' as _i2;
import 'package:demo_app/domain/usecase/get_tarrif_plans.dart' as _i4;
import 'package:demo_app/domain/usecase/release_parking_slot.dart' as _i3;
import 'package:demo_app/presentation/bloc/car_parking_cubit.dart' as _i8;
import 'package:demo_app/presentation/bloc/car_parking_states.dart' as _i5;
import 'package:flutter/cupertino.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetParkingSlotUseCase_0 extends _i1.Fake
    implements _i2.GetParkingSlotUseCase {}

class _FakeReleaseParkingSlotUseCase_1 extends _i1.Fake
    implements _i3.ReleaseParkingSlotUseCase {}

class _FakeGetTariffPlansUseCase_2 extends _i1.Fake
    implements _i4.GetTariffPlansUseCase {}

class _FakeCarParkingState_3 extends _i1.Fake implements _i5.CarParkingState {}

class _FakeTariffDomainEntity_4 extends _i1.Fake
    implements _i6.TariffDomainEntity {}

class _FakeStreamSubscription_5<T> extends _i1.Fake
    implements _i7.StreamSubscription<T> {}

/// A class which mocks [CarParkingCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarParkingCubit extends _i1.Mock implements _i8.CarParkingCubit {
  MockCarParkingCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetParkingSlotUseCase get getByServiceTypeUseCase => (super.noSuchMethod(
        Invocation.getter(#getByServiceTypeUseCase),
        returnValue: _FakeGetParkingSlotUseCase_0(),
      ) as _i2.GetParkingSlotUseCase);
  @override
  _i3.ReleaseParkingSlotUseCase get patchUseCase => (super.noSuchMethod(
        Invocation.getter(#patchUseCase),
        returnValue: _FakeReleaseParkingSlotUseCase_1(),
      ) as _i3.ReleaseParkingSlotUseCase);
  @override
  _i4.GetTariffPlansUseCase get tariffPlansUseCase => (super.noSuchMethod(
        Invocation.getter(#tariffPlansUseCase),
        returnValue: _FakeGetTariffPlansUseCase_2(),
      ) as _i4.GetTariffPlansUseCase);
  @override
  String get getSlot => (super.noSuchMethod(
        Invocation.getter(#getSlot),
        returnValue: '',
      ) as String);
  @override
  set setSlot(String? name) => super.noSuchMethod(
        Invocation.setter(
          #setSlot,
          name,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.CarParkingState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCarParkingState_3(),
      ) as _i5.CarParkingState);
  @override
  _i7.Stream<_i5.CarParkingState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: Stream<_i5.CarParkingState>.empty(),
      ) as _i7.Stream<_i5.CarParkingState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> getSlotForCarParking(
    _i9.BuildContext? context,
    String? slotType,
    int? parkingSpace,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSlotForCarParking,
          [
            context,
            slotType,
            parkingSpace,
          ],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<_i6.TariffDomainEntity> getTariff(
    _i9.BuildContext? context,
    String? slotType,
    int? parkingSpace,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTariff,
          [
            context,
            slotType,
            parkingSpace,
          ],
        ),
        returnValue:
            Future<_i6.TariffDomainEntity>.value(_FakeTariffDomainEntity_4()),
      ) as _i7.Future<_i6.TariffDomainEntity>);
  @override
  _i7.Future<void> releaseSlotForCarParking(
    _i9.BuildContext? context,
    String? size,
    int? parkingSpace,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #releaseSlotForCarParking,
          [
            context,
            size,
            parkingSpace,
          ],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void setLoadedState() => super.noSuchMethod(
        Invocation.method(
          #setLoadedState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<String> nameRetriever(String? name1) => (super.noSuchMethod(
        Invocation.method(
          #nameRetriever,
          [name1],
        ),
        returnValue: Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.StreamSubscription<_i5.CarParkingState> listen(
    void Function(_i5.CarParkingState)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [onData],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i5.CarParkingState>(),
      ) as _i7.StreamSubscription<_i5.CarParkingState>);
  @override
  void emit(_i5.CarParkingState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i10.Change<_i5.CarParkingState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
}
